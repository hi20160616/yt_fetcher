syntax = "proto3";

option go_package = "github.com/hi20160616/yt_fetcher/api/yt_fetcher/api";
option java_multiple_files = true;
option java_package = "io.grpc.examples.routeguide";
option java_outer_classname = "RouteGuideProto";

package yt_fetcher.api;

// Youtube fetch service, no need youtube api key.
service YoutubeFetcher{
    // Get videoIds from a youtube video list page
    rpc GetVideoIds(Channel) returns (Channel) {}
    // Get videos info by page url set in channel
    rpc GetVideos(Channel) returns (Videos){}
    // Get videos info updated from time a to time b and rank != -1
    rpc GetVideosFromTo(Videos) returns (Videos){}
    // Get videos info in last 24 hours and rank != -1
    rpc GetVideosIn24H(Videos) returns (Videos){}
    // Get video info by videoId
    rpc GetVideo(Video) returns (Video){}
    // Get and set channel name by cid
    rpc GetSetCname(Channel) returns (Channel){}
    // Get all channels
    rpc GetChannels(Channels) returns (Channels){}
    // Get Channel info by cid
    rpc GetChannel(Channel) returns (Channel){}
    // Search videos if title or description contains keywords
    rpc SearchVideos(Videos) returns (Videos){}
}

message Channel{
    string id = 1; 
    string name = 2;
    int32 rank = 3;
    string last_updated = 4;
    repeated string vids = 5;
}

message Channels{
    repeated Channel channels = 1;
}

message Video{
    string id = 1;
    string title = 2;
    repeated Thumbnail thumbnails = 3;
    string description = 4;
    string duration = 5;
    string cid = 6;
    string cname = 7;
    int64 last_updated = 8;
}

message Thumbnail{
    string Id = 1;
    int32 Width = 2;
    int32 Height = 3;
    string URL = 4;
    string Vid = 5;
}

message Videos{
    int64 after = 1;
    int64 before = 2;
    int32 limit = 3;
    repeated Video videos = 4;
    repeated string keywords = 5;
}
